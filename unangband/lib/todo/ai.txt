Monsters should operate completely independently of the player. Most monsters will patrol corridors and navigate rooms (Possibly controlled via flag). Because we'll use run code in most instances, this should not be an efficiency concern. Fleeing monsters will also always use the run code, ignoring the player, but should choose a path that will move away from the player.

We'll also navigate rooms by running along walls to the next clockwise/anti-clockwise corridor and taking it, or running away from the corridor when entering a room (allowing movement 'across' a room). We will then only need 2 smart algorithms:

    1. to check for dead ends when choosing if we should run down an adjacent corridor
    2. to always choose a run to move us towards a random exit of a room (Which only requires scanning the edge of a room), other than the one we are next to.

These algorithms can be relatively slower, because monsters using it will be running most of the time, which should be highly efficient. There is a possibility of having only dead ends in a room, which will case the monster to randomly walk from exit to exit, but never leave. This behaviour is not a problem.

Unangband is nice in the sense it enforces that all terrain have a safe traversible path across it, even if the player cannot necessarily see it. This should be used by the monster if it is capable of entering that terrain.

Monsters should not know the player is present until detecting them (either via sight, sound, smell, ESP or detection spells). Having done so, they will not run (ie are disturbed) when moving.

Monsters will be able to fight with other monsters, but this will not be the norm. In particular, good and evil monsters will fight each other, regardless of the presence of the player, and kill body monsters will attack any one other than their own kind. This may be expanded on (eg Undead attacking the living, demons attacking animals etc).

Monsters that do not attack and are not allied will try and avoid each other. If attacked, they will fight back.

Monster alliance occurs under the following circumstances: if both monsters are evil; or undead; or demonic; or both monsters are not-STUPID and have the same graphic; or if one monster can summon the other. Allies share information with each other regarding player resistances. Leader types will also nominate enemies for their allies, and will choose the most powerful enemy they know about (with a bias towards the player). This will make monsters act smarter if there is an allied leader around.

Monsters choose to attack a random nearby enemy, and will cast spells against and move towards this enemy. If they are adjacent to another enemy, they will melee with that enemy instead. 

Having detected a player, or choosen an enemy, monsters will have complete flexibility to cast spells out of line of sight. Summon spells cast out of line-of-sight are around the monster casting them (As currently implemented).

Monster mana will not be used. To limit summon spells, which are the biggest problem with out of sight casting, a summon count-down will be used, which must reach 0 before the monster can cast a summon spell. This applies to both the summoner and summoned monster when the summoning is cast. Monsters summoned by the player will be deleted when this countdown reaches 0.

Confused monster will attack any monster they blunder into, and use innate attacks in a random directly. Monsters in terrain they cannot cross move will move in a random direction, unless they can escape to safe terrain, where they will use it. Monsters that stagger will not stagger into unsafe terrain. (All currently implemented)

Fleeing monsters will be able to push past allies. (As currently implemented). Flying and climbing monsters are also always able to push past, and be pushed past (Since they move 3 dimensionally), as well as any monster hidden in terrain ie in water underneath ice, or in the floor. (Also currently implemented).

Flow by sound and flow by smell will be used by monster if the player is their enemy. Since the only good monsters generated on a level will be uniques, it is more than likely that the only enemy on a level will be the player. I'll definitely want to use the smarter flow algorithms that Oangband uses.

Each monster will keep a record of their current target monster. If this is 0, and they are sufficiently far away, they will not cast spells, or move, for efficiency concerns. If negative, it is the player. I'll definitely use your recovery code. But since all monsters will be processed each turn, it'll remain in process_monsters.

