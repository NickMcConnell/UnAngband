Unangband now uses an online database to record bugs and feature
requests. See http://developer.berlios.de/bugs/?group_id=331 for
an up to date list.

The following comprises a rough ideas list not already included
at that URL.

This file describes my basic to do list for Unangband.
Also see Lib\Todo, which is a dumping group for
various files and ideas.


Release v0.6.1
==============
TODO: Implement Ego lights.

TODO: Allow potions to be applied to sharp weapons (swords / polearms) and arrows/bolts.

TODO: Have impassable trees and rubble which are hidden and found by either attempting to
cross them or search them.

TODO: Have light spells use line of sight, as opposed to line of fire, for their
projections.

TODO: Have loose rocks 'searched' to find the hidden object.

TODO: Allow trolls and other monster to eat monster bodies to heal themselves, and vampires to
suck the blood from monster bodies to improve their mana.

TODO: Stores should preferentially stock items that the player actually buys.

TODO: Good items should not include the high-level books.


Release v0.6.5
==============
TODO: Re-balancing of objects and removal of 'useless' or less useful objects.

TODO: Implement monster spells the same way as player spells.

TODO: Make mushrooms and other mimic monsters 'hide' in objects that they
mimic.

TODO: Add monster ability 'reflect/beams' and 'reflect shots/thrown'.

TODO: Add sleep effect.

TODO: Add statis effect.

TODO: Allow trolls and other monster to eat monster bodies to heal themselves, and vampires to
suck the blood from monster bodies to improve their mana.

TODO: Forget should cause spell casters to forget their spells, as opposed to forgetting what
objects do.

TODO: Higher level birds, for bird summoners.

TODO: 'Good' monsters don't summon evil. 'Evil' monsters don't summon good.

TODO: Mouse interaction with game.

TODO: Commands from menus.


Release v0.7.0
==============
TODO: Implement friendly monsters and uniques.

TODO: Give monsters some AI patterns.

TODO: Implement room descriptions version 2.

TODO: Allow research of spells without a spellbook.

TODO: Player buffs defined in a text file as opposed to code.

TODO: Have an option birth_evil that automatically flags the player as evil.

TODO: Have uniques corresponding to the players family.

TODO: Create set items as per Sangband, but including sets of dragon armor.

TODO: Assemblies that can be build into objects of any type.

TODO: Complete quest code.

TODO: Additional store functions. If a store is sold an empty wand / staff, it charges it.
If a store is sold the constituents for an object it attempts to make it.

TODO: Stores, in conjunction with the character's charisma, offer additional quests based
on what the player state is.



Release v0.8.0
==============
TODO:Implement alchemy/manufacturing items.

TODO:Implement revised bard spell list.

TODO:Implement all magic spells so that they are level dependent.

TODO:Implement mana regeneration, searching, detection etc. as a spell effect.

TODO:Implement monster spellbooks, so that monsters can cast all ACID_MAGIC
etc. spells.

TODO: Players pick their own stats when they advance a level.

TODO: Drop chunks of metals and large jewels for manufacturing purposes.

TODO: Mystics carry essences.


Release v0.9.0
==============
TODO: Have two layers of terrain - wall/feature and 'underlying terrain'.

TODO: Implement the player hiding in terrain, and items of
invisibility.

TODO: Walk on terrain flags.

TODO: Storm clouds should now be created by GF_WIND.

TODO: All magically created terrain should create a timer on it.

TODO: Have electrical projections get 'conducted' by acid, water or metal.

TODO: Have various metal terrains.

TODO: Have the concept of pushing and pulling when interacting with terrain.

TODO: Have machines which can be filled with oil and switched on.

TODO: Have crystals of various colours and types, which cause interaction between sound,
electricity and light.

TODO: Add tents (G:<:R), sails (G:>:R).

TODO: Replace wooden floors with wooden decks.

TODO: Allow player to dig shallow pits, which fill with water etc to become
shallow water.

TODO: Let pits and deep pits fill with water to become deep water etc.

TODO: As previous points, but let water flow into a chasm to become a
waterfall, similiarly lava etc.

TODO: Should be able to traverse chasms/pits once fallen in without damage
(Actually all MUST_CLIMB terrain).

TODO: Add phases of the moon. During a full moon, light all outside
locations (but not adjacent locations - so still darker than daylight).
During a new moon, treat outside like inside.  Should treat one phase
darker if the night is overcast, and two phases darker if it is
stormy (2 phases darker during daytime treats like a full moon).

TODO: Add before sunrise and after sunset phases of night. During
before sunrise, do not light locations to the west. During
after sunset, do not light locations to the east. These time last
for half an hour.

TODO: Add an eclipse, which lasts 5 minutes and occurs once... light
like a full moon.

TODO: I like the idea of being able to get onto the roof of a building. 


Release v0.10.0
===============
TODO: Revised dungeon generation.

TODO: Revised wilderness generation.





Notes
=====

TODO: Implement Ego lights.
I was also thinking about doing magical candles, and haven't decided
whether lanterns will be done in e_info.txt or k_info.txt.

TODO: Implement the player hiding in terrain, and items of
invisibility.
	This will require tweaking the monster AI so that
monsters that cannot see you do something. Acting confused is
in my opinion, a bit of a hack. I'd rather they left the room,
or wandered around the room, if they weren't aware of you. Acting
confused if they are aware of you might be a possibility.

TODO: Give monsters some AI patterns. eg
Hunt - move to a random room exit, or move down corridor.
Make decision again when encountering another room exit.
Attack anyone from another room. Get the bodies and bring
back to home room.

Patrol - as hunt, but never leave room. Attack anyone from
another room. Return to room if outside it.

Twitch - move randomly (Don't use unless none other possible).

Gather - Use hunt algorithm to go to another room. If room has
items, get items and return to home room and drop them in home
room. Flee anyone from another room if has items, or attack
them otherwise. (requires take item ability).

Scout - move to a random room exit, or move down corridor.
Attack anyone from another room, and set immediately to flee.
Return to home room. (requires ranged attack)

Animals only use patrol and hunt algorithms (Hunting when hungry,
patrol when satiated).

Rest - never leave room. Remains stationary until detects target.
Return to room if outside it.

TODO: Implement friendly monsters and uniques.
	Long overdue, but its a reasonably big job.
Should be less of a job now, as all spells can be cast by monsters
on each other and there are cooperative spells that monsters can
use to assist the player now (such as haste, heal and cure).

TODO:Implement monster spells the same way as player spells.
Don't know if this is necessary, but is a logical conclusion to
much of the 4GAI work already done.

TODO:Implement alchemy/manufacturing items.
	This is low priority at this stage. Perhaps do essences
as per Sangband, or ingredients based system?

TODO:Implement room descriptions version 2.
        This will mean that features and objects will be placed
more aesthetically around the room, and match the textual
descriptions.

TODO:Implement revised bard spell list.
Revise bard spells, so that none are directional spells.
(Eg fiery aura etc.)

TODO:Implement line of sight damage intensification spells.
eg Fire Dance, Wild Waters, Sea's Rage and so on.
These spells affect terrain with the same flavour attack and
result in an extra dynamic action.  Eg Fire Dance causes
all locations in line of sight that cause FIRE damage to burn
again immediately.

TODO:Implement all magic spells so that they are level dependent.

TODO:Implement mana regeneration, searching, detection etc. as a spell effect.

TODO:Implement monster spellbooks, so that monsters can cast all ACID_MAGIC
etc. spells.

TODO: Implement skill system. Unangband skill system comes out of the
specialistaion system: Similar to Sangband, but with restrictions on what
you can spend skills on based on your surroundings. eg you can only learn
weapon & shield skill when you are holding or carrying a shield.
Also add Damage Resistance skill, so that you increase you hps
independently of total skills.

Instead of Oaths, have totals for certain skill combinations limited to
a certain value eg highest magic skill + highest weapon skill may not exceed 150,
Fire Magic + Water Magic may not exceed 150 etc.

Allow spell skills to be learnt based on what spells are known and books
are held. eg to learn any spell in Cantrips requires the player have a
Cantrips book.

Other skills: Literacy (Use of scrolls), Wizardy (Use of staffs), Chemistry
(Use of potions) etc.

TODO:Allow research of spells without a spellbook. You can continue to research
a spell once you have learnt it. This gives you a chance of producing
Research Notes (for spells), Runesticks (For runes), Lyric Sheets (For songs)
or Prayer Beads (for prayers). The item contains a spell from another spell
book that the spell you are researching is contained in. eg researching
Detect Monsters in a magic book of Cantrips may help you produce research
notes for Identify.

TODO: Make mushrooms and other mimic monsters 'hide' in objects that they
mimic.

TODO: Add tents (G:<:R), sails (G:>:R).

TODO: Replace wooden floors with wooden decks.

TODO: Allow player to dig shallow pits, which fill with water etc to become
shallow water.

TODO: Let pits and deep pits fill with water to become deep water etc.

TODO: As previous points, but let water flow into a chasm to become a
waterfall, similiarly lava etc.

The above three should probably use LAVA, ACID etc transitions, rather
than HURT_FIRE, HURT_ACID.

TODO: Should be able to traverse chasms/pits once fallen in without damage
(Actually all MUST_CLIMB terrain).

TODO: Add phases of the moon. During a full moon, light all outside
locations (but not adjacent locations - so still darker than daylight).
During a new moon, treat outside like inside.  Should treat one phase
darker if the night is overcast, and two phases darker if it is
stormy (2 phases darker during daytime treats like a full moon).

TODO: Add before sunrise and after sunset phases of night. During
before sunrise, do not light locations to the west. During
after sunset, do not light locations to the east. These time last
for half an hour.

TODO: Add an eclipse, which lasts 5 minutes and occurs once... light
like a full moon.

TODO: Allow potions to be applied to sharp weapons (swords / polearms) and arrows/bolts.
This causes the weapon to apply the potion effect when hitting. It has % chance equal
to weight of weapon in tenths of pounds of losing the effect afterwards (doubled for
bladed weapons, which require more potion).

TODO: Add monster ability 'reflect/beams' and 'reflect shots/thrown'. These cause either
any bolt/beam attack, or any shot/thrown weapon to reflect in a random compass direction,
instead of affecting the target. This can also reflect back at the player...

TODO: Add sleep effect: this is the same effect for monsters, but for player, causes 
paralysis, which is removed temporarily if the player takes any damage, but reapplies
3 turns later, until the sleep timer runs out. Damage for this purpose excludes
poison/wounds and other cumulative effects.

TODO: Add statis effect: this is the same as paralysis, but the player/monster is immune
to all damage and magical effects for the duration of the paralysis.

TODO: Create set items as per Sangband, but including sets of dragon armor.

Dragon age	Item	Basic ability		3 of set	4 of set	Entire set
------------	------	-------------		-------		--------	----------
Baby dragons	gloves	None.					Act for brand.
Young dragons	boots	None.			Walk on terrain
Mature dragons	shield  Good ac. Resistance.			Temp resistance
Ancient dragons	armour	Resistance, breath. Counts as 2 items of set.
Wyrms		helm	Res blind, breath.					Immunity.

S:set:tval:sval:number required of set:flag(s)
S:set:tval:sval:number required of set:flags

Note that only coloured and metallic dragons get gloves / boots / shield / armour / helm
and have sets.

Metallic dragons also drop their coin type. They only provide immunity, branding, walk
on terrain and temporary resistance to the base element they prefer.
Gem dragons drop gems of their type only.
Drakes drop shields, armour and helms only and do not have sets. However, the shields,
armour and helms are quite useful...

TODO: Assemblies that can be build into objects of any type. Need some way of noting the final
tval / sval / ego / artifact type of the item.

Item		Parts
----		-----
Sword		Handle, blade, guard, pommel
Hafted		Handle, head
Polearm		Handle, head
Light armour	greaves, breast plate, throat guard etc
Heavy armour	greaves, breast plate, throat guard etc
Dragon armour	greaves, breast plate, throat guard etc
Gloves		left glove, right glove
Boots		left boot, right boot
Artifact light	setting, jewel

This in particular allows dragons to always drop parts of dragon armour, that the player
must assemble into the whole item.

TODO: Out of depth objects should come in assemblies, particularly out of depth artifacts.
Then, the player is given a quest by the applicable store owner for the additional parts of
the item. *Important*: Because the player has already 'qualified' for the item by
having the RNG generate it, we should make the quests suitable for the player level, not
the object level. Unless we are feeling evil.

TODO: Player buffs defined in a text file as opposed to code.

TODO: Walk on terrain flags. We horribly hack these and allow the RES_ flags on boots to 
automatically protect against certain terrain types:

Flag		Ability
----		-------
Res_fire	Fire walk	Not harmed by burning oil, fire & smoke
Res_acid	Acid walk	Not harmed by acid or acidic clouds
Res_cold	Ice walk	Not harmed by ice, cannot slip on ice, cannot sink in snow
Res_pois	Swamp walk	Cannot slip on mud, does not sink into mud
Res_elec	Cloud walk	Cannot fall into chasms that are filled with clouds

This is of course, a horrible hack. Note that boots of cloud walking break many of the
puzzles we would otherwise force solutions for by using chasms.

TODO: Extend the idea of clouds to include chasms being affected by HURT_COLD, HURT_WATER,
HURT_ACID and HURT_FIRE to create snow clouds, mist, acidic clouds and smoke respectively.
In order that these can effectively be 'cloud-walked', have them transition as follows
       	      SPREAD                   INSTANT
snow cloud    ----->   thinning cloud  ------>    chasm
       	      HURT_ACID
       	      <--------
			G:>:W
                 	D:The snow cloud begins to thin.

       SPREAD                   INSTANT
mist   ------>   thinning mist  ------>    chasm
       HURT_WATER
       <---------
		 G:>:W
                 D:The mist begins to thin.

       		SPREAD                    INSTANT
acidic cloud    ------>   thinning cloud  ------>    chasm
       		HURT_ACID
       		<--------
			  G:>:G
                 	  D:The acidic cloud begins to thin.

         SPREAD                    INSTANT
smoke    ------>   thinning smoke  ------->    chasm
       	 HURT_FIRE
       	 <--------
		   G:>:S
                   D:The smoke begins to thin.



This gives the player one turn (or more for faster players) in order to move off the
cloud space.

Because chasms are not floors, it is possible to use ball spells and beam spells to
create clouds in the chasms very easily.

In order to create temporary bridges, allow mist to be frozen to create an icy bridge - 
which times out and collapses.

Create cloud levels, which are levels that are 95% unbridged chasms. Have each room
contain either boots of cloud walking or wands of bridge building or web building. Have
each cloud walking room surrounded by a lump of irregular rock that contains a waterfall
of either oil, water, lava or acid, next to the room exit. This forces the player to
experiment with cloud walking in order to move between the room locations.

TODO: Storm clouds should now be created by GF_WIND. GF_WIND should be used to create other
storm effects (e.g. waves), as opposed to the current random hack. GF_WIND should instead
randomly be applied over a level depending on some kind of wind factor - particularly
on surface levels.

TODO: All magically created terrain should create a timer on it, which times out after a
number (50?) of turns and reverts to the old terrain. This should also apply to timed
terrain. Possibly use objects to create these timers.

TODO: Have electrical projections get 'conducted' by acid, water or metal. This means that
instead of using the standard projection code, if an electrical projection hits a grid
that is conductive, it instead randomly moves between adjacent conductive squares until
maximum range is achieved (use MAX_SIGHT as an upper limit). Ball attacks should be
conducted more effectively, so that radius does not decrease damage.

TODO: Have various metal terrains, including metal floors, metal walls (which cannot be
tunnelled or bashed, but are not permanent), and chains. Chains can cross caverns.

TODO: Have the concept of pushing and pulling. Pushing or pulling on a chain pushes or pulls
on all adjacent chains until there is no adjacent chain. Pushing or pulling on a chest moves
it around on a floor. Pushing or pulling on a block (a new feature) pushes or pulls it around
a shallow pit (which we can use to restrict the path of the block). Pushing or pulling a deck
moves it around. All of the above objects move around on chain.

This can be used to move objects around in various puzzle situations. This can be used
to move a wooden deck along chain over a chasm to make it cross-able.

We can have wooden blocks and stone blocks. These block site and movement, but can
be moved around to solve puzzles.

TODO: Have machines, which are terrain types which when filled with oil and then hurt by
electricity, can create various types of effects. A furnace creates fire. A generator creates
electricity. A pump moves oil/water/acid around. An engine pushes or pulls or opens or 
closes stuff. Two adjacent generators in alternate turns when feed by oil can continuously
run together. 

Machines can be manually operated by opening and closing them, as opposed to having
to hurt them with electricity. However, they require oil.

Create puzzle rooms, using machines. e.g. a pump has to be used to fill a furnace,
because if oil is moved directly next to the furnace, it is set on fire by the furnace and
no longer usable. e.g. an engine has to be run to open a valve to feed oil to a machine.
e.g. an engine has to open an otherwise inaccessible door to let out a monster that the
player has to fight.

TODO: Have crystals of various colours and types, which cause interaction between sound,
electricity and light. A dark crystal absorbs light and creates electricity. A clear crystal
absorbs electricity and creates light. A glowing crystal gives off light and fades. A mirror
reflects light and electricity around. Sound destroys all crystals and mirrors, except tough
coloured crystals. Note that all crystals should let light through. Note that crystals cannot
be tunnelled, and are impassable.

Crystal rooms should start off lit so that the puzzle is fully visible...

To create a basic crystal clearing problem, where the strategy is to minimise the number of
light beams required to clear a path, create a room and fill it with crystals, except for a 1 width
wide path at the bottom. Pick a column of the room and a crystal colour. Then write a sentence
in diagonally down and up that results in each adjecent crystal vibrating from the effect of
the attack of the adjacent crystal. Start with light on the 1st crystal.

Valid sentences are:

rbbbbb...
grbbbbb...


               HURT_LITE
dark crystal   --------->   charged crystal
               TIMED
               <------
	       HURT_SOUND   
               ---------->  open floor

	       HURT_ELEC
clear crystal  --------->   glowing crystal
               TIMED
               <------
	       HURT_SOUND   open floor
               ---------->

              HURT_LITE
red crystal   --------->    vibrating red crystal
              TIMED
              <------
              HURT_ELEC     glowing red crystal
              --------->
              TIMED
              <------
              HURT_SOUND    charged red crystal
              ---------->
              TIMED
              <------
So a line of red crystals   123123123123  

e.g. regardless of what a red crystal is hit with, every adjacent location is hit by
sound energy at some point, if there are at least 2 adjacent.

adjacent to other crystal colours

colour	light based causes partner to vibrate?   elec based causes partner to vibrate?
------  --------------------------------------   ------------------------------------
red			 no					  yes
green	                 no                                       no
blue	                 yes                                      no
yellow                   no    					  yes


green crystal HURT_ELEC     vibrating green crystal
              --------->
              TIMED
              <------
              HURT_LITE     glowing green crystal
              --------->
              TIMED
              <------
              HURT_SOUND    charged green crystal
              ---------->
              TIMED
              <------

So a line of green crystals   1313131313   where 1 - vibrating, 2 - glowing, 3 - charged
                         or   2222222222

e.g. it is safe to hit 2 adjacent green crystals with lite, but hitting 2 adjacent crystals
with sound or electricity causes every adjacent location to be hit with sound energy at some
point.

adjacent to other crystal colours

colour	light based causes partner to vibrate?   elec based causes partner to vibrate?
------  --------------------------------------   ------------------------------------
red			 yes					  no
green	                 no                                       no
blue	                 no                                       yes
yellow                   yes   					  no


blue crystal  HURT_SOUND    vibrating blue crystal
              ---------->
              TIMED
              <------
              HURT_LITE     charged blue crystal
              --------->
              TIMED
              <------
              HURT_ELEC     glowing blue crystal
              --------->
              TIMED
              <--------

So a line of blue crystals    2323232323   where 1 - vibrating, 2 - glowing, 3 - charged
                         or   1111111111

e.g. hitting 2 adjacent green crystals with sound energy causes them all to be emit sound
continuous, but but hitting them with lite or electricity causes them to pass on lite and
electricity.

adjacent to other crystal colours

colour	light based causes partner to vibrate?   elec based causes partner to vibrate?
------  --------------------------------------   ------------------------------------
red			 no					  yes
green	                 yes                                      no
blue	                 no                                       no
yellow                   no   					  yes


yellow crystal  HURT_SOUND    glowing yellow crystal
                ---------->
                TIMED
                <------
                HURT_LITE     vibrating yellow crystal
                --------->
                TIMED
                <------
                HURT_ELEC     charged yellow crystal
                --------->
                TIMED
                <------

So a line of yellow crystals  1212121212   where 1 - vibrating, 2 - glowing, 3 - charged
                         or   3333333333

e.g. hitting 2 adjacent yellow crystals with electrical energy causes them all to be emit
electricity continuously, but but hitting them with sound or lite ensures that all adjacent
locations are hit with sound at some point.

colour	light based causes partner to vibrate?   elec based causes partner to vibrate?
------  --------------------------------------   ------------------------------------
red			 no					  no
green	                 no                                       yes
blue	                 yes                                      no
yellow                   no   					  no


So what parameters can be manipulated by light and electricity only.

x - dark, o - light, rgby - coloured, 1 - vibrating, 2 - glowing, 3 - charged  

In a line of crystals, with a single coloured crystal

xxxxxxxx   nothing transmitted, however a light beam can pass through to the end

oooooooo   nothing transmitted, however a light beam can pass through to the end

xoxoxoxo   hit first dark with lite
32323232

oxoxoxox   hit first lite with elec, or first dark with beam/ball of lite
23232323

ooooooor   hit with lite, red destroys all adjacent crystals and stops
       1
oooooo r

oxoxoxor   red destroys adjacent crystals and stops, if a clear crystal next to it
23232321
oxoxox r

xoxoxoxr   red has no impact if all crystals adjacent are dark, just ends up glowing
32323232
xoxoxoxr

ooooooog   hit with lite, green just ends up glowing
       1
ooooooog

oxoxoxog   green has no impact if all crystals adjacent are clear, just ends up glowing
23232322

xoxoxoxg   green destroys adjacent crystals and stops, if a dark crystal next to it
32323231
xoxoxo g

xoxoxoxb   blue never destroys adjacent clear or dark crystals, just ends up acting like
32323232   a dark crystal

oxoxoxob
23232323

oxoxoxoy   yellow always destoys adjacent crystals if there is a lit crystal next to it
           yellow never destroys crystals if all adjacent crystals are dark            

Which order to hit crystals in?

ooooooooooo
ogoboyorogo
ooooooooooo

oooooo   oo
ogoboy   go   Hitting red.   
oooooo   oo

oooo   oooo
ogob   rogo   Hitting yellow.
oooo   oooo

222oooooooo
2g2boyorogo   Hitting green.
222oooooooo

oo222oooooo
og2b2yorogo   Hitting blue.
oo222oooooo

123456789
ooooooooo
ogxboyxro
ooooooooo

   22oooo
   b2yxro     Hitting column 2.
   22oooo

   22oooo
   b2yxro     Hitting column 3.
   22oooo

   22oooo
   b2yxro     Hitting column 4.
   22oooo

oooo   oo
ogxb   ro     Hitting column 6.
oooo   oo

ooooooooo
ogxboyxro     Hitting column 7.
ooooooooo
   

   22oooo
   b2yxro     Hitting column 2.
   22oooo

   22oooo
   b2yxro     Hitting column 3.
   22oooo

   22oooo
   b2yxro     Hitting column 4.
   22oooo

oooo   oo
ogxb   ro     Hitting column 6.
oooo   oo

oooooo   
ogxboy        Hitting column 8.
oooooo   

123456789
ooooooogo
ooooooboo
ooooorooo
ooooyoooo
ooobooooo
oogoooooo
orooooooo
ooooooooo

ooooooogo
ooooooboo
ooooorooo
ooooyoooo
ooobooooo
  goooooo
 r oooooo
   oooooo

ooooooogo
ooooooboo
ooo  rooo
ooo y ooo
ooob  ooo
oogoooooo
orooooooo
ooooooooo

ooooooogo
oooo   oo
oooo   oo
oooo   oo
ooobooooo
oogoooooo
orooooooo
ooooooooo

oooooo g
oooo  b 
ooo  r 
ooo y ooo
o  b  ooo
  g ooooo
 r  ooooo
   oooooo

Hitting the blue crystal in this instance, causes a chain reaction...



TODO: Have impassable trees and rubble which are hidden and found by either attempting to
cross them or search them.

TODO: Have light spells use line of sight, as opposed to line of fire, for their
projections.


TODO: It should now be possible to create trapped areas as follows (where < is falling
terrain and % is a vent):

####.      #####.
#<%%.   or #<%%%.
####.      #####.

This results in the the floor locations getting hit, on the left, every 3 turns,
or on the right every 4 turns (an adjacent water fall will hit every 2 turns).

TODO: Additional store functions. If a store is sold an empty wand / staff, it charges it.
If a store is sold the constituents for an object it attempts to make it.


TODO: Stores, in conjunction with the character's charisma, offer additional quests based
on what the player stat is. In particular:
* if the player is diseased (and not just lightly) have the temple offer a quest to cure the
particular disease.
* same for drained stats.
* if the player has part of an assembly, the store owner gives a quest for the next part
* the armoury gives quests to kill additional dragons, once a first dragon of a particular
type is killed, to collect the skin in order to make the appropriate dragon object
* all stores give quests if they are sold an object they are not aware of, to find an
additional x objects to 'analyse how it is made'
* once this quest is complete, a store offers a quest to restock the same, by killing x
monsters of a particular type and collecting a body part of some kind

TODO: Drop chunks of metals and large jewels for manufacturing purposes.

TODO: Stores should preferentially stock items that the player actually buys.

TODO: Good items should not include the high-level books. Good items should however include
any object that the player has not seen or id'ed before. Perhaps give a power boost to unknown
items, and evaluate overall object power to determine if the object is 'good' or not.

TODO: Players pick their own stats when they advance a level.

TODO: Mystics carry essences.

TODO: Have an option birth_evil that automatically flags the player as evil. This means
they do not have to worry about which weapon combinations to wield as much. Also, evil players
will never get allies.

TODO: Have uniques corresponding to the players family. They are primarily quest 
givers, however, if the player is evil, they will spit, insult, and wail at
the player. (Considering vomit on, but it might be a bit much).

TODO: Allow trolls and other monster to eat monster bodies to heal themselves, and vampires to
suck the blood from monster bodies to improve their mana.

TODO: Forget should cause spell casters to forget their spells, as opposed to forgetting what
objects do.

TODO: Higher level birds, for bird summoners.

TODO: 'Good' monsters don't summon evil. 'Evil' monsters don't summon good.

TODO: I like the idea of being able to get onto the roof of a building. In which case, the line of
sight algorithm needs to be special cased, so that all 'roof' grids block line of sight in
the traditional sense, and the player only has line of sight and line of fire to monsters with
MFLAG_OVER set.


e.g. ......,,,
     .#####,,,
     .##b##,,,
     .#a##@,,,
     .#####,,,
     ......,,,

The player gets LOS calculated to the grids marked with a , normally. However,
all the roof grids block LOS in the traditional sense (otherwise the player would
see the floors underneath the roof). The player can't see or project to the 'a' ant, because
the ant does not have the MFLAG_OVER set. e.g. the ant is on
the real floor underneath the roof.

However the player can see and the 'b' bat, because the bat has the MFLAG_OVER set (e.g. is
flying over the building). Furthermore, if the player throws a fireball at the bat, the ant
won't be affected. This requires setting some kind of PROJECT_OVER flag set when projecting
at a target when you are climbing or MFLAG_OVER, and the first step is covered...
